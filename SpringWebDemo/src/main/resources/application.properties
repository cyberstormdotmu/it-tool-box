
#JNDI RESOURCES
spring.datasource.jndi-name=jdbc/myDataSource


#DATASOURCE (we can add more than one with another .properties and/or in code)
# H2 database for credentials storage in this demo
#if we add a data.sql file in src/main/resources, Spring will recognize it automatically.. also add dependencies to pom		spring-boot-starter-data-jpa	and	h2
#enabling access to h2 console,	lets go to http://localhost:8080/demo-spring-web/h2-console to manage it. We disabled remote access also
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false

#bbdd en fichero -> jdbc:h2:~/H2Database/data/demo (will create db on /Users/Leo/H2Database/data/demo)
#spring.datasource.url=jdbc:h2:~/H2Database/data/demo
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa
#spring.datasource.password=password
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

#if we're not expecting Hibernate to create the schema now, we should disable the ddl-auto property
#para evitar que intente crear las tablas user y authorities en cada arranque ? no sirvió!
#spring.jpa.hibernate.ddl-auto=none
#spring.jpa.generate-ddl=false

#By default, Spring Boot initializes the data source only for embedded databases (ie. H2 not MySQL)
	#si queremos que la inicialice a partir de un schema.sql y llene con un data.sql, usamos esto:
#spring.datasource.initialization-mode=always


#LOGGING
#logging.level.<logger-name>=<level> where level is one of TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or OFF.
	logging.level.org.springframework.web.servlet.mvc.method.annotation=DEBUG
#For SB v2.1.4-RELEASE:
	logging.level.org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping=DEBUG
	logging.level.org.springframework.web=DEBUG
#logging.level.root=TRACE (mucho log)
#no mostrar errores de servidor en consola (no funcionó!, usamos un workaround extendiendo la clase de la exception)
server.error.include-stacktrace=never


#SHOW TX TRACE
logging.level.org.springframework.transaction.interceptor=TRACE


#SECURITY (we are using SecurityConfiguration class to customize more things)
#spring.security.user.name=user
#spring.security.user.password=pass

